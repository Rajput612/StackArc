---
import MainLayout from '../../layouts/MainLayout.astro';
import CodePlayground from '../../components/CodePlayground';

const LINKED_LIST_CODE = `# Linked List Implementation and Operations

class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

class LinkedList:
    def __init__(self):
        self.head = None
    
    def append(self, val):
        if not self.head:
            self.head = ListNode(val)
            return
        
        current = self.head
        while current.next:
            current = current.next
        current.next = ListNode(val)
    
    def print_list(self):
        elements = []
        current = self.head
        while current:
            elements.append(str(current.val))
            current = current.next
        print(" -> ".join(elements))

# Create a new linked list
ll = LinkedList()

# Add some elements
print("Adding elements to linked list:")
for i in range(1, 6):
    ll.append(i)
    ll.print_list()

# Demonstrate traversal
print("\\nTraversing the linked list:")
current = ll.head
while current:
    print(f"Node value: {current.val}")
    current = current.next`;
---

<MainLayout title="Linked Lists">
  <div class="max-w-4xl mx-auto">
    <h1 class="text-4xl font-bold text-gray-900 mb-6">Linked Lists</h1>
    
    <div class="bg-white rounded-lg shadow-lg p-8 mb-8">
      <h2 class="text-2xl font-semibold text-gray-800 mb-4">Introduction to Linked Lists</h2>
      <p class="text-gray-600 mb-6">
        A linked list is a linear data structure where elements are stored in nodes, and each node points to the next node in the sequence.
        Unlike arrays, linked lists don't require contiguous memory allocation.
      </p>

      <div class="mb-8">
        <h3 class="text-xl font-semibold text-gray-800 mb-4">Try Linked List Operations</h3>
        <p class="text-gray-600 mb-4">
          Experiment with linked list implementation and operations. The code below shows a basic implementation
          with node creation and list traversal. Feel free to modify and extend it!
        </p>
        <CodePlayground client:load initialCode={LINKED_LIST_CODE} showExamples={false} />
      </div>

      <div class="space-y-6">
        <div>
          <h3 class="text-xl font-semibold text-gray-800 mb-3">Key Characteristics</h3>
          <ul class="list-disc list-inside text-gray-600 space-y-2">
            <li>Dynamic size - can grow or shrink during execution</li>
            <li>Non-contiguous memory allocation</li>
            <li>Efficient insertion and deletion at the beginning</li>
            <li>Sequential access - no random access like arrays</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</MainLayout>