---
import MainLayout from '../../../layouts/MainLayout.astro';
import CourseViewer from '../../../components/CourseViewer.astro';
import { courseContent } from '../../../config/courseContent';

export function getStaticPaths() {
  return Object.keys(courseContent).map(courseId => ({
    params: { courseId },
    props: { course: courseContent[courseId] }
  }));
}

const { courseId } = Astro.params;
const { course } = Astro.props;

if (!course) {
  return Astro.redirect('/404');
}

// Client-side enrollment check
---

<MainLayout title={`${course.title} - StackArc`}>
  <div class="enrollment-check hidden">
    <div class="fixed inset-0 bg-gray-900 bg-opacity-75 flex items-center justify-center">
      <div class="bg-white dark:bg-gray-800 p-8 rounded-lg shadow-xl max-w-md w-full text-center">
        <h2 class="text-2xl font-bold text-gray-900 dark:text-white mb-4">
          Course Not Enrolled
        </h2>
        <p class="text-gray-600 dark:text-gray-400 mb-6">
          You need to enroll in this course before accessing its content.
        </p>
        <div class="flex justify-center space-x-4">
          <a
            href="/courses"
            class="px-4 py-2 bg-indigo-600 text-white rounded hover:bg-indigo-700 transition-colors"
          >
            Go to Courses
          </a>
        </div>
      </div>
    </div>
  </div>

  <div class="course-content">
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-16">
      <!-- Course Header -->
      <div class="mb-16">
        <h1 class="text-4xl font-bold text-gray-900 dark:text-white mb-4">
          {course.title}
        </h1>
        <div class="flex gap-6 text-gray-600 dark:text-gray-400 mb-8">
          <div class="flex items-center">
            <span class="material-icons mr-2">schedule</span>
            <span>{course.concepts.reduce((acc, concept) => acc + parseInt(concept.duration), 0)} minutes</span>
          </div>
          <div class="flex items-center">
            <span class="material-icons mr-2">school</span>
            <span>{course.concepts.length} concepts</span>
          </div>
          <div class="flex items-center">
            <span class="material-icons mr-2">fitness_center</span>
            <span>{course.concepts.reduce((acc, concept) => acc + concept.exercises.length, 0)} exercises</span>
          </div>
        </div>
        <a
          href={`/courses/${courseId}/${course.concepts[0].id}`}
          class="inline-flex items-center px-6 py-3 bg-indigo-600 text-white rounded-lg hover:bg-indigo-700 transition-colors"
        >
          Start Learning
          <span class="material-icons ml-2">arrow_forward</span>
        </a>
      </div>

      <!-- Course Content -->
      <div class="grid gap-8">
        {course.concepts.map((concept, index) => (
          <div class="bg-white dark:bg-gray-800 rounded-lg shadow-sm p-6 border border-gray-200 dark:border-gray-700">
            <div class="flex items-start gap-4">
              <div class="w-8 h-8 bg-indigo-100 dark:bg-indigo-900/50 text-indigo-600 dark:text-indigo-400 rounded-full flex items-center justify-center font-semibold">
                {index + 1}
              </div>
              <div class="flex-1">
                <h3 class="text-xl font-semibold text-gray-900 dark:text-white mb-2">
                  {concept.title}
                </h3>
                <p class="text-gray-600 dark:text-gray-400 mb-4">
                  {concept.description}
                </p>
                <div class="flex flex-wrap gap-4 text-sm">
                  <span class="px-3 py-1 bg-indigo-100 text-indigo-800 rounded-full">
                    {concept.duration}
                  </span>
                  <span class="px-3 py-1 bg-blue-100 text-blue-800 rounded-full">
                    {concept.difficulty}
                  </span>
                  <span class="px-3 py-1 bg-green-100 text-green-800 rounded-full">
                    {concept.exercises.length} exercises
                  </span>
                </div>
              </div>
              <a
                href={`/courses/${courseId}/${concept.id}`}
                class="px-4 py-2 text-indigo-600 hover:bg-indigo-50 dark:hover:bg-indigo-900/50 rounded-lg transition-colors"
              >
                Start â†’
              </a>
            </div>
          </div>
        ))}
      </div>
    </div>
  </div>
</MainLayout>

<script>
  import { EnrollmentStore } from '../../../stores/enrollmentStore';

  // Get course ID from URL
  const courseId = window.location.pathname.split('/')[2];

  // Check enrollment status
  if (!EnrollmentStore.isEnrolled(courseId)) {
    document.querySelector('.enrollment-check').classList.remove('hidden');
    document.querySelector('.course-content').classList.add('hidden');
  }
</script>
