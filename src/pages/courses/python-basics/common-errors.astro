---
import MainLayout from '../../../layouts/MainLayout.astro';
import CodePlayground from '../../../components/CodePlayground.jsx';
import CourseSidebar from '../../../components/CourseSidebar.astro';

const syntaxErrorsCode = `# Common Syntax Errors in Python

# 1. Missing parentheses
print "Hello World"  # SyntaxError in Python 3
print("Hello World") # Correct way

# 2. Missing colon after if/for/while/def
if x > 0
    print(x)
    
# Correct way:
if x > 0:
    print(x)

# 3. Incorrect indentation
def my_function():
print("Wrong indentation")

# Correct way:
def my_function():
    print("Correct indentation")

# 4. Mismatched quotes
message = "Hello'  # Wrong
message = "Hello"  # Correct`;

const runtimeErrorsCode = `# Common Runtime Errors

# 1. TypeError - mixing incompatible types
number = 5
text = "10"
result = number + text  # TypeError
# Fix: Convert string to number first
result = number + int(text)  # Works!

# 2. NameError - using undefined variables
print(undefined_variable)  # NameError
# Fix: Define the variable first
my_variable = "I exist!"
print(my_variable)  # Works!

# 3. IndexError - accessing invalid list index
my_list = [1, 2, 3]
print(my_list[5])  # IndexError
# Fix: Use valid index
print(my_list[2])  # Works!

# 4. ZeroDivisionError
result = 10 / 0  # ZeroDivisionError
# Fix: Check for zero before division
denominator = 0
if denominator != 0:
    result = 10 / denominator`;

const logicErrorsCode = `# Logic Errors (Bugs)
# These don't raise errors but give wrong results!

# 1. Wrong operator
def calculate_average(numbers):
    total = 0
    for num in numbers:
        total + num  # Forgot assignment (+=)
    return total / len(numbers)

# Correct way:
def calculate_average_fixed(numbers):
    total = 0
    for num in numbers:
        total += num  # Added assignment
    return total / len(numbers)

# Test both functions
numbers = [1, 2, 3, 4, 5]
print(f"Wrong result: {calculate_average(numbers)}")
print(f"Correct result: {calculate_average_fixed(numbers)}")`;

---

<MainLayout title="Common Python Errors">
  <div class="flex">
    <CourseSidebar courseType="python-basics" currentTopicId="common-errors" />
    
    <div class="flex-1 p-8 overflow-y-auto">
      <div class="max-w-4xl mx-auto">
        <h1 class="text-3xl font-bold mb-8">Common Python Errors and How to Fix Them</h1>

        <div class="bg-yellow-50 rounded-lg p-6 mb-8">
          <h2 class="text-xl font-semibold mb-4">Understanding Python Errors</h2>
          <p class="mb-4">
            Python errors can be grouped into three main categories:
          </p>
          <ul class="list-disc ml-6 space-y-2">
            <li><strong>Syntax Errors:</strong> Code that Python can't understand</li>
            <li><strong>Runtime Errors:</strong> Code that fails during execution</li>
            <li><strong>Logic Errors:</strong> Code that runs but gives wrong results</li>
          </ul>
        </div>

        <section class="mb-12">
          <h2 class="text-2xl font-semibold mb-4">Syntax Errors</h2>
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6">
            <p class="mb-4">
              These are errors in the way you've written your code. Python will catch these before running your program:
            </p>
            <CodePlayground 
              client:load 
              initialCode={syntaxErrorsCode}
              language="python"
            />
          </div>
        </section>

        <section class="mb-12">
          <h2 class="text-2xl font-semibold mb-4">Runtime Errors</h2>
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6">
            <p class="mb-4">
              These errors happen while your program is running. They occur when you try to do something impossible:
            </p>
            <CodePlayground 
              client:load 
              initialCode={runtimeErrorsCode}
              language="python"
            />
          </div>
        </section>

        <section class="mb-12">
          <h2 class="text-2xl font-semibold mb-4">Logic Errors</h2>
          <div class="bg-white dark:bg-gray-800 rounded-lg p-6">
            <p class="mb-4">
              These are the trickiest errors because Python won't tell you about them. Your code runs but gives wrong results:
            </p>
            <CodePlayground 
              client:load 
              initialCode={logicErrorsCode}
              language="python"
            />
          </div>
        </section>

        <section class="mb-12">
          <h2 class="text-2xl font-semibold mb-4">What We've Learned</h2>
          <div class="bg-green-50 dark:bg-gray-800 rounded-lg p-6">
            <ul class="list-disc ml-6 space-y-2">
              <li>How to identify different types of errors</li>
              <li>Common syntax mistakes to avoid</li>
              <li>How to handle runtime errors</li>
              <li>Ways to find and fix logic errors</li>
              <li>Best practices for writing error-free code</li>
            </ul>
          </div>
        </section>

        <div class="bg-blue-50 rounded-lg p-6">
          <h2 class="text-xl font-semibold mb-4">Practice Ideas</h2>
          <ul class="list-disc ml-6 space-y-2">
            <li>Try to fix the syntax errors in the examples</li>
            <li>Write code to handle different runtime errors</li>
            <li>Debug a program with logic errors</li>
            <li>Create your own error messages</li>
            <li>Practice using try-except to handle errors</li>
          </ul>
        </div>
      </div>
    </div>
  </div>
</MainLayout>
