---
import MainLayout from '../../../layouts/MainLayout.astro';
import CourseSidebar from '../../../components/CourseSidebar.astro';
import CodePlayground from '../../../components/CodePlayground.jsx';
---

<MainLayout title="Python Operators">
  <div class="flex">
    <CourseSidebar courseType="python-basics" />
    <div class="flex-1 max-w-4xl mx-auto px-4 py-8">
      <h1 class="text-3xl font-bold mb-8">Python Operators</h1>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Arithmetic Operators</h2>
        <div class="rounded-lg p-6 bg-white dark:bg-gray-800">
          <table class="w-full text-left">
            <thead>
              <tr class="border-b border-gray-700">
                <th class="py-2">Operator</th>
                <th class="py-2">Description</th>
                <th class="py-2">Example</th>
              </tr>
            </thead>
            <tbody>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">+</code></td>
                <td>Addition</td>
                <td><code class="bg-transparent">5 + 3 = 8</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">-</code></td>
                <td>Subtraction</td>
                <td><code class="bg-transparent">10 - 4 = 6</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">*</code></td>
                <td>Multiplication</td>
                <td><code class="bg-transparent">3 * 4 = 12</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">/</code></td>
                <td>Division</td>
                <td><code class="bg-transparent">15 / 3 = 5.0</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">%</code></td>
                <td>Modulus (Remainder)</td>
                <td><code class="bg-transparent">17 % 5 = 2</code></td>
              </tr>
              <tr>
                <td><code class="bg-transparent">**</code></td>
                <td>Exponentiation</td>
                <td><code class="bg-transparent">2 ** 3 = 8</code></td>
              </tr>
            </tbody>
          </table>
        </div>
        <CodePlayground 
          client:load 
          initialCode={`# Arithmetic Operators
a = 10
b = 3

print("Addition:", a + b)        # 13
print("Subtraction:", a - b)     # 7
print("Multiplication:", a * b)  # 30
print("Division:", a / b)        # 3.333
print("Modulus:", a % b)         # 1
print("Exponentiation:", a ** b) # 1000`} 
        />
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Comparison Operators</h2>
        <div class="rounded-lg p-6 bg-white dark:bg-gray-800">
          <table class="w-full text-left">
            <thead>
              <tr class="border-b border-gray-700">
                <th class="py-2">Operator</th>
                <th class="py-2">Description</th>
                <th class="py-2">Example</th>
              </tr>
            </thead>
            <tbody>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">==</code></td>
                <td>Equal to</td>
                <td><code class="bg-transparent">5 == 5 # True</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">!=</code></td>
                <td>Not equal to</td>
                <td><code class="bg-transparent">5 != 3 # True</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">&gt;</code></td>
                <td>Greater than</td>
                <td><code class="bg-transparent">7 > 3 # True</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">&lt;</code></td>
                <td>Less than</td>
                <td><code class="bg-transparent">3 < 7 # True</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">&gt;=</code></td>
                <td>Greater than or equal to</td>
                <td><code class="bg-transparent">5 >= 5 # True</code></td>
              </tr>
              <tr>
                <td><code class="bg-transparent">&lt;=</code></td>
                <td>Less than or equal to</td>
                <td><code class="bg-transparent">4 <= 5 # True</code></td>
              </tr>
            </tbody>
          </table>
        </div>
        <CodePlayground 
          client:load 
          initialCode={`# Comparison Operators
a = 10
b = 5

print("Equal to:", a == b)           # False
print("Not equal to:", a != b)       # True
print("Greater than:", a > b)        # True
print("Less than:", a < b)           # False
print("Greater or equal:", a >= b)   # True
print("Less or equal:", a <= b)      # False`} 
        />
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Logical Operators</h2>
        <div class="rounded-lg p-6 bg-white dark:bg-gray-800">
          <table class="w-full text-left">
            <thead>
              <tr class="border-b border-gray-700">
                <th class="py-2">Operator</th>
                <th class="py-2">Description</th>
                <th class="py-2">Example</th>
              </tr>
            </thead>
            <tbody>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">and</code></td>
                <td>Logical AND</td>
                <td><code class="bg-transparent">True and False # False</code></td>
              </tr>
              <tr class="border-b border-gray-700">
                <td><code class="bg-transparent">or</code></td>
                <td>Logical OR</td>
                <td><code class="bg-transparent">True or False # True</code></td>
              </tr>
              <tr>
                <td><code class="bg-transparent">not</code></td>
                <td>Logical NOT</td>
                <td><code class="bg-transparent">not True # False</code></td>
              </tr>
            </tbody>
          </table>
        </div>
        <CodePlayground 
          client:load 
          initialCode={`# Logical Operators
x = True
y = False

print("AND:", x and y)  # False
print("OR:", x or y)    # True
print("NOT:", not x)    # False

# Real-world example
age = 25
is_student = True

can_get_discount = age < 30 and is_student
print("Can get discount:", can_get_discount)  # True`} 
        />
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Arithmetic Operators Practice</h2>
        <CodePlayground 
          client:only="react"
          initialCode={`# Practice Arithmetic Operators
# Try performing different arithmetic operations

# Addition
a = 10
b = 5
print("Addition:", a + b)

# Subtraction
print("Subtraction:", a - b)

# Multiplication
print("Multiplication:", a * b)

# Division
print("Division:", a / b)

# Modulus
print("Modulus:", a % b)

# Exponentiation
print("Exponentiation:", a ** 2)`}
          solution={`# Solution for Arithmetic Operators
a = 10
b = 5

# Addition
print("Addition:", a + b)        # Output: 15

# Subtraction
print("Subtraction:", a - b)     # Output: 5

# Multiplication
print("Multiplication:", a * b)  # Output: 50

# Division
print("Division:", a / b)        # Output: 2.0

# Modulus
print("Modulus:", a % b)         # Output: 0

# Exponentiation
print("Exponentiation:", a ** 2) # Output: 100`}
        />
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Comparison Operators Practice</h2>
        <CodePlayground 
          client:only="react"
          initialCode={`# Practice Comparison Operators
# Try comparing different values

a = 10
b = 5

# Equal to
print("Equal to:", a == b)

# Not equal to
print("Not equal to:", a != b)

# Greater than
print("Greater than:", a > b)

# Less than
print("Less than:", a < b)

# Greater than or equal to
print("Greater or equal:", a >= b)

# Less than or equal to
print("Less or equal:", a <= b)`}
          solution={`# Solution for Comparison Operators
a = 10
b = 5

# Equal to
print("Equal to:", a == b)        # Output: False

# Not equal to
print("Not equal to:", a != b)    # Output: True

# Greater than
print("Greater than:", a > b)     # Output: True

# Less than
print("Less than:", a < b)        # Output: False

# Greater than or equal to
print("Greater or equal:", a >= b)  # Output: True

# Less than or equal to
print("Less or equal:", a <= b)   # Output: False`}
        />
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Logical Operators Practice</h2>
        <CodePlayground 
          client:only="react"
          initialCode={`# Practice Logical Operators
# Try combining different boolean conditions

x = True
y = False

# AND operator
print("AND:", x and y)

# OR operator
print("OR:", x or y)

# NOT operator
print("NOT x:", not x)
print("NOT y:", not y)`}
          solution={`# Solution for Logical Operators
x = True
y = False

# AND operator
print("AND:", x and y)   # Output: False
# Returns True only if both conditions are True

# OR operator
print("OR:", x or y)     # Output: True
# Returns True if at least one condition is True

# NOT operator
print("NOT x:", not x)   # Output: False
print("NOT y:", not y)   # Output: True
# Inverts the boolean value`}
        />
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Bitwise Operators Practice</h2>
        <CodePlayground 
          client:only="react"
          initialCode={`# Practice Bitwise Operators
# Try bitwise operations on integers

a = 10  # Binary: 1010
b = 4   # Binary: 0100

# Bitwise AND
print("Bitwise AND:", a & b)

# Bitwise OR
print("Bitwise OR:", a | b)

# Bitwise XOR
print("Bitwise XOR:", a ^ b)

# Bitwise NOT
print("Bitwise NOT a:", ~a)

# Left shift
print("Left shift:", a << 2)

# Right shift
print("Right shift:", a >> 2)`}
          solution={`# Solution for Bitwise Operators
a = 10  # Binary: 1010
b = 4   # Binary: 0100

# Bitwise AND (returns 1 if both bits are 1)
print("Bitwise AND:", a & b)      # Output: 0 (0000)

# Bitwise OR (returns 1 if at least one bit is 1)
print("Bitwise OR:", a | b)       # Output: 14 (1110)

# Bitwise XOR (returns 1 if bits are different)
print("Bitwise XOR:", a ^ b)      # Output: 14 (1110)

# Bitwise NOT (inverts all bits)
print("Bitwise NOT a:", ~a)       # Output: -11

# Left shift (shifts bits to left, equivalent to multiplying by 2^n)
print("Left shift:", a << 2)      # Output: 40

# Right shift (shifts bits to right, equivalent to dividing by 2^n)
print("Right shift:", a >> 2)     # Output: 2`}
        />
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Practice Problems</h2>
        <div class="rounded-lg p-6 bg-white dark:bg-gray-800">
          <h3 class="text-xl font-semibold mb-4">Operator Challenges</h3>
          
          <div class="space-y-8">
            <div class="bg-gray-700 rounded-lg p-6">
              <h4 class="text-lg font-semibold mb-3">🧮 Challenge 1: Simple Calculator</h4>
              <p class="text-gray-300 mb-4">Create a basic calculator that performs arithmetic operations on two numbers. Learn how to use arithmetic operators effectively.</p>
              
              <div class="grid md:grid-cols-2 gap-6">
                <div>
                  <h5 class="font-semibold mb-2">🎯 Learning Objectives</h5>
                  <ul class="list-disc list-inside text-gray-300 space-y-2">
                    <li>Practice using arithmetic operators</li>
                    <li>Handle user inputs and conversions</li>
                    <li>Implement basic error handling</li>
                  </ul>
                </div>
                
                <div>
                  <h5 class="font-semibold mb-2">🚀 Challenge Hints</h5>
                  <ul class="list-disc list-inside text-gray-300 space-y-2">
                    <li>Use <code class="bg-transparent">input()</code> to get numbers</li>
                    <li>Convert inputs using <code class="bg-transparent">float()</code></li>
                    <li>Implement +, -, *, / operations</li>
                    <li>Add input validation</li>
                  </ul>
                </div>
              </div>
              
              <div class="mt-6">
                <CodePlayground 
                  client:load 
                  initialCode={`# Simple Calculator Challenge
# TODO: Implement a basic calculator with arithmetic operations
# Hint: Handle different arithmetic operations

# Get user inputs
num1_str = input("Enter first number: ")
num2_str = input("Enter second number: ")
operation = input("Enter operation (+, -, *, /): ")

# TODO: Add code to perform calculations and handle errors`} 
                />
              </div>
            </div>
            
            <div class="bg-gray-700 rounded-lg p-6">
              <h4 class="text-lg font-semibold mb-3">🔢 Challenge 2: Age Verification System</h4>
              <p class="text-gray-300 mb-4">Build a program that uses comparison operators to verify age and determine user access levels.</p>
              
              <div class="grid md:grid-cols-2 gap-6">
                <div>
                  <h5 class="font-semibold mb-2">🎯 Learning Objectives</h5>
                  <ul class="list-disc list-inside text-gray-300 space-y-2">
                    <li>Use comparison operators</li>
                    <li>Implement logical conditions</li>
                    <li>Handle different age scenarios</li>
                  </ul>
                </div>
                
                <div>
                  <h5 class="font-semibold mb-2">🚀 Challenge Hints</h5>
                  <ul class="list-disc list-inside text-gray-300 space-y-2">
                    <li>Use <code class="bg-transparent">&gt;=</code> and <code class="bg-transparent">&lt;=</code> operators</li>
                    <li>Combine conditions with <code class="bg-transparent">and</code>, <code class="bg-transparent">or</code></li>
                    <li>Provide different access levels</li>
                    <li>Add input type conversion</li>
                  </ul>
                </div>
              </div>
              
              <div class="mt-6">
                <CodePlayground 
                  client:load 
                  initialCode={`# Age Verification Challenge
# TODO: Create an age verification system with access levels
# Hint: Use comparison and logical operators

# Get user age
age_str = input("Enter your age: ")

# TODO: Add code to verify age and determine access`} 
                />
              </div>
            </div>
          </div>
        </div>
      </section>

      <section class="mb-12">
        <h2 class="text-2xl font-semibold mb-4">Challenge Solutions</h2>
        <div class="rounded-lg p-6 bg-white dark:bg-gray-800">
          <div class="space-y-8">
            <div class="bg-gray-700 rounded-lg p-6">
              <h3 class="text-lg font-semibold mb-3">🧮 Solution 1: Simple Calculator</h3>
              <CodePlayground 
                client:load 
                initialCode={`# Simple Calculator Solution
# Real-world scenario: Basic arithmetic calculator

try:
    # Get user inputs with type conversion
    num1 = float(input("Enter first number: "))
    num2 = float(input("Enter second number: "))
    operation = input("Enter operation (+, -, *, /): ")

    # Perform calculations with error handling
    if operation == '+':
        result = num1 + num2
        print(f"Result: {num1} + {num2} = {result}")
    elif operation == '-':
        result = num1 - num2
        print(f"Result: {num1} - {num2} = {result}")
    elif operation == '*':
        result = num1 * num2
        print(f"Result: {num1} * {num2} = {result}")
    elif operation == '/':
        # Handle division by zero
        if num2 != 0:
            result = num1 / num2
            print(f"Result: {num1} / {num2} = {result}")
        else:
            print("Error: Cannot divide by zero!")
    else:
        print("Invalid operation. Choose +, -, *, or /")

except ValueError:
    print("Invalid input. Please enter numeric values.")`} 
              />
            </div>
            
            <div class="bg-gray-700 rounded-lg p-6">
              <h3 class="text-lg font-semibold mb-3">🔢 Solution 2: Age Verification System</h3>
              <CodePlayground 
                client:load 
                initialCode={`# Age Verification Solution
# Real-world scenario: Access control system

try:
    # Get user age with type conversion
    age = int(input("Enter your age: "))

    # Implement access levels using comparison operators
    if age < 0:
        print("Invalid age! Age cannot be negative.")
    elif age < 13:
        print("Access Denied: Too young for this platform.")
    elif 13 <= age < 18:
        print("Limited Access: Parental consent required.")
        print("You can access basic features.")
    elif 18 <= age < 65:
        print("Full Access Granted!")
        print("Welcome to all platform features.")
    else:
        print("Senior Access: Special features available.")

except ValueError:
    print("Invalid input. Please enter a valid age.")`} 
              />
            </div>
          </div>
        </div>
      </section>
    </div>
  </div>
</MainLayout>

<style>
  code {
    @apply bg-transparent px-1 rounded text-sm;
  }
</style>
