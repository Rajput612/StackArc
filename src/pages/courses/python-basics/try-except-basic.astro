---
import MainLayout from '../../../layouts/MainLayout.astro';
import CodeBlock from '../../../components/CodeBlock';
import CourseSidebar from '../../../components/CourseSidebar.astro';

const basicTryExceptCode = `# Basic try-except structure
try:
    # Code that might raise an exception
    number = int(input("Enter a number: "))
    result = 10 / number
    print(f"Result: {result}")
except ValueError:
    print("Please enter a valid number!")
except ZeroDivisionError:
    print("Cannot divide by zero!")`;

const tryExceptElseCode = `# Using try-except-else
def get_user_input():
    try:
        age = int(input("Enter your age: "))
    except ValueError:
        print("Invalid age format!")
        return None
    else:
        # This runs only if no exception occurred
        print("Input successfully processed!")
        return age
    finally:
        # This always runs
        print("Input operation completed.")`;

const multipleExceptionsCode = `# Handling multiple exceptions
def process_list_item(lst, index):
    try:
        # Multiple things could go wrong here
        value = lst[index]
        result = 100 / value
        print(f"Result: {result}")
    except IndexError:
        print(f"Error: Index {index} is out of range!")
    except ZeroDivisionError:
        print("Error: Cannot divide by zero!")
    except Exception as e:
        # Catch any other unexpected errors
        print(f"An unexpected error occurred: {e}")

# Example usage
numbers = [1, 2, 0, 4]
process_list_item(numbers, 0)  # Works fine
process_list_item(numbers, 2)  # Division by zero
process_list_item(numbers, 10) # Index out of range`;
---

<MainLayout title="Python Try-Except Basics">
  <div class="flex">
    <CourseSidebar courseType="python-basics" currentTopicId="try-except-basic" />
    <div class="flex-1 max-w-4xl mx-auto px-4 py-8">
      <h1 class="text-3xl font-bold mb-8">Try-Except Basics in Python</h1>
      
      <div class="bg-white rounded-lg shadow-lg p-8 mb-8">
        <h2 class="text-2xl font-semibold text-gray-800 mb-4">Understanding Try-Except</h2>
        <p class="text-gray-600 mb-6">
          The try-except block is Python's primary mechanism for handling exceptions. It allows you to write code that gracefully handles potential errors.
        </p>

        <div class="mb-8">
          <h3 class="text-xl font-semibold text-gray-800 mb-4">Basic Try-Except Structure</h3>
          <CodeBlock code={basicTryExceptCode} />
          <div class="mt-4 text-gray-600">
            <p>Key components:</p>
            <ul class="list-disc ml-6 mt-2">
              <li>try block: Contains code that might raise an exception</li>
              <li>except blocks: Handle specific types of exceptions</li>
              <li>Multiple except blocks can handle different exceptions</li>
              <li>Code continues after exception handling</li>
            </ul>
          </div>
        </div>

        <div class="mb-8">
          <h3 class="text-xl font-semibold text-gray-800 mb-4">Try-Except-Else-Finally</h3>
          <CodeBlock code={tryExceptElseCode} />
          <div class="mt-4 text-gray-600">
            <p>Additional clauses:</p>
            <ul class="list-disc ml-6 mt-2">
              <li>else: Runs if no exception occurs in try block</li>
              <li>finally: Always runs, regardless of exceptions</li>
              <li>Useful for cleanup operations</li>
              <li>Provides clear code structure</li>
            </ul>
          </div>
        </div>

        <div class="mb-8">
          <h3 class="text-xl font-semibold text-gray-800 mb-4">Handling Multiple Exceptions</h3>
          <CodeBlock code={multipleExceptionsCode} />
          <div class="mt-4 text-gray-600">
            <p>Advanced exception handling:</p>
            <ul class="list-disc ml-6 mt-2">
              <li>Can handle multiple specific exceptions</li>
              <li>Order matters - more specific before general</li>
              <li>Can capture exception information using 'as'</li>
              <li>General Exception as fallback</li>
            </ul>
          </div>
        </div>

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="bg-gray-50 p-6 rounded-lg">
            <h3 class="text-lg font-semibold text-gray-800 mb-3">Best Practices</h3>
            <ul class="space-y-2 text-gray-600">
              <li>Keep try blocks small and focused</li>
              <li>Handle specific exceptions first</li>
              <li>Use else clause for success-dependent code</li>
              <li>Use finally for cleanup code</li>
            </ul>
          </div>
          
          <div class="bg-gray-50 p-6 rounded-lg">
            <h3 class="text-lg font-semibold text-gray-800 mb-3">Common Mistakes</h3>
            <ul class="space-y-2 text-gray-600">
              <li>Catching too general exceptions</li>
              <li>Silently passing exceptions</li>
              <li>Too large try blocks</li>
              <li>Wrong order of except blocks</li>
            </ul>
          </div>
        </div>
      </div>
    </div>
  </div>
</MainLayout>
