---
import Layout from '../layouts/Layout.astro';
import Navbar from '../components/Navbar.astro';
import CourseSidebarFilter from '../components/CourseSidebarFilter.tsx';
import CourseSorting from '../components/CourseSorting.tsx';

const PUBLIC_API_URL = import.meta.env.PUBLIC_API_URL || 'http://localhost:8000';
---

<Layout title="Courses">
  <div class="min-h-screen bg-gray-50 dark:bg-gray-900">
    <Navbar />
    
    <div class="pt-16">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8">
        <div class="grid grid-cols-12 gap-6">
          <div class="col-span-12 md:col-span-3 lg:col-span-3 xl:col-span-3">
            <div class="sticky top-24 space-y-6">
              <CourseSidebarFilter client:load />
            </div>
          </div>
          
          <div class="col-span-12 md:col-span-9 lg:col-span-9 xl:col-span-9">
            <div class="mb-6 flex justify-between items-center">
              <h1 class="text-2xl font-bold text-gray-900 dark:text-white">
                Available Courses
              </h1>
              
              <div class="w-48">
                <CourseSorting client:load />
              </div>
            </div>
            
            <div 
              id="courses-container" 
              class="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6"
            >
              <!-- Courses will be dynamically rendered here -->
            </div>
          </div>
        </div>
      </div>
    </div>
  </div>

  <script define:vars={{ PUBLIC_API_URL }}>
    // Function to fetch and render courses
    const fetchAndRenderCourses = async () => {
      const coursesContainer = document.getElementById('courses-container');
      
      try {
        // Get current URL parameters
        const urlParams = new URLSearchParams(window.location.search);
        
        // Construct API URL with current parameters
        const apiUrl = new URL(`${PUBLIC_API_URL}/api/courses/`);
        urlParams.forEach((value, key) => {
          apiUrl.searchParams.append(key, value);
        });

        const response = await fetch(apiUrl.toString());
        const courses = await response.json();

        coursesContainer.innerHTML = courses.map(course => `
          <div 
            class="bg-white dark:bg-gray-800 rounded-lg shadow-md overflow-hidden group transition-all duration-300 hover:shadow-xl relative"
          >
            <div class="p-4 flex items-center relative">
              <span class="mr-4 text-3xl">
                ${course.icon}
              </span>
              <h3 class="text-lg font-semibold text-gray-900 dark:text-gray-100 flex-grow truncate">
                ${course.title}
              </h3>
              
              <div class="absolute top-0 right-0">
                <span class="px-2 py-1 text-xs font-medium rounded-full ${
                  course.status === 'coming-soon' 
                    ? 'bg-yellow-100 text-yellow-800' 
                    : 'bg-green-100 text-green-800'
                }">
                  ${course.status === 'coming-soon' ? 'Coming Soon' : 'Available'}
                </span>
              </div>
            </div>
            
            <div class="p-4 flex flex-col flex-grow">
              <p class="text-sm text-gray-600 dark:text-gray-400 mb-4 flex-grow line-clamp-3">
                ${course.description}
              </p>
              
              <div class="flex justify-between items-center">
                <div class="text-sm text-gray-500 dark:text-gray-400">
                  ${course.total_topics} Topics
                </div>
                
                <a 
                  href="/courses/${course.id}"
                  class="px-4 py-2 text-sm font-medium text-white bg-blue-600 rounded-md hover:bg-blue-700 transition-colors"
                >
                  Start Learning
                </a>
              </div>
            </div>
            
            <div class="absolute bottom-0 left-0 right-0 h-1 bg-gray-200 dark:bg-gray-700 hidden group-hover:block">
              <div 
                class="h-full bg-blue-500" 
                style="width: ${Math.random() * 100}%"
              ></div>
            </div>
          </div>
        `).join('');
      } catch (error) {
        console.error('Error fetching courses:', error);
        coursesContainer.innerHTML = `
          <div class="col-span-full text-center py-12">
            <p class="text-red-600">Failed to load courses. Please try again later.</p>
          </div>
        `;
      }
    };

    // Event listeners for dynamic filtering
    window.addEventListener('popstate', fetchAndRenderCourses);
    
    // Custom event for filter changes
    document.addEventListener('course-filter-change', fetchAndRenderCourses);

    // Initial fetch
    fetchAndRenderCourses();
  </script>
</Layout>

<style>
  .line-clamp-3 {
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
</style>
