---
interface Props {
  path: {
    title: string;
    description: string;
    duration: string;
    courses: number;
    icon: string;
    color: string;
    includes?: string[];
  };
}

const { path } = Astro.props;
---

<div class="group relative overflow-hidden rounded-xl">
  <div class={`absolute inset-0 bg-gradient-to-r ${path.color} opacity-90 group-hover:opacity-100 transition-opacity`}></div>
  <div class="relative p-8">
    <div class="text-5xl mb-4">{path.icon}</div>
    <h3 class="text-2xl font-bold text-white mb-2">
      {path.title}
    </h3>
    <p class="text-white/80 mb-4">
      {path.description}
    </p>
    <div class="flex items-center text-white/90 text-sm">
      <span class="mr-4">{path.duration}</span>
      <span>{path.courses} courses</span>
    </div>
    {path.includes && (
      <div class="mt-4">
        <div class="text-sm text-white/80">Includes:</div>
        <ul class="mt-2 space-y-1">
          {path.includes.map(course => (
            <li class="text-sm text-white/90">• {course}</li>
          ))}
        </ul>
      </div>
    )}
    <div class="absolute bottom-0 right-0 p-4 opacity-0 group-hover:opacity-100 transition-opacity">
      <button class="px-4 py-2 bg-white text-indigo-600 rounded-lg font-medium hover:bg-indigo-50 transition-colors">
        View Path →
      </button>
    </div>
  </div>
</div>
