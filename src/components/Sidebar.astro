---
import { topics } from '../config/topics';

// Default to intermediate if no user type is found
const defaultUserType = 'intermediate';
let userTopics = [];

try {
  const response = await fetch('http://localhost:8080/api/user', {
    credentials: 'include'
  });
  
  if (response.ok) {
    const data = await response.json();
    if (data.success && data.userType && topics[data.userType]) {
      userTopics = topics[data.userType];
    } else {
      // Fallback to default topics if user type is not found
      userTopics = topics[defaultUserType] || [];
    }
  } else {
    // Use default topics if not authenticated
    userTopics = topics[defaultUserType] || [];
  }
} catch (error) {
  console.error('Error fetching user data:', error);
  // Use default topics if there's an error
  userTopics = topics[defaultUserType] || [];
}
---

<aside class="w-64 bg-white dark:bg-gray-800 shadow-lg h-screen sticky top-0 overflow-y-auto transition-colors duration-300">
  <div class="p-4">
    <div class="flex items-center justify-between mb-6">
      <h2 class="text-xl font-bold text-gray-800 dark:text-white">Topics</h2>
      <button
        id="mobile-close"
        class="lg:hidden text-gray-500 hover:text-gray-700 dark:text-gray-400 dark:hover:text-gray-200"
      >
        <svg class="w-6 h-6" fill="none" stroke="currentColor" viewBox="0 0 24 24">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
        </svg>
      </button>
    </div>

    <nav class="space-y-4">
      {userTopics && userTopics.length > 0 ? (
        userTopics.map((category) => (
          <div class="mb-6">
            <h3 class="text-sm font-semibold text-gray-400 dark:text-gray-500 uppercase tracking-wider mb-3">
              {category.title}
            </h3>
            
            <ul class="space-y-2">
              {category.topics && category.topics.map((topic) => (
                <li>
                  <a
                    href={topic.path}
                    class="block px-4 py-2 text-gray-700 dark:text-gray-300 hover:bg-indigo-50 dark:hover:bg-gray-700 rounded-md transition-colors duration-200"
                  >
                    {topic.title}
                  </a>
                </li>
              ))}
            </ul>
          </div>
        ))
      ) : (
        <div class="text-center py-4">
          <p class="text-gray-500 dark:text-gray-400">
            Please log in to view topics
          </p>
          <a
            href="/login"
            class="inline-block mt-2 px-4 py-2 bg-indigo-600 text-white rounded-md hover:bg-indigo-700 transition-colors"
          >
            Login
          </a>
        </div>
      )}
    </nav>
  </div>
</aside>

<script>
  const mobileClose = document.getElementById('mobile-close');
  if (mobileClose) {
    mobileClose.addEventListener('click', () => {
      const sidebar = mobileClose.closest('aside');
      if (sidebar) {
        sidebar.classList.add('hidden');
      }
    });
  }
</script>

<style>
  aside {
    scrollbar-width: thin;
    scrollbar-color: #888 transparent;
  }

  aside::-webkit-scrollbar {
    width: 6px;
  }

  aside::-webkit-scrollbar-track {
    background: transparent;
  }

  aside::-webkit-scrollbar-thumb {
    background-color: #888;
    border-radius: 3px;
  }

  aside::-webkit-scrollbar-thumb:hover {
    background-color: #666;
  }

  @media (max-width: 1024px) {
    aside {
      position: fixed;
      z-index: 50;
      transform: translateX(-100%);
      transition: transform 0.3s ease-in-out;
    }

    aside.show {
      transform: translateX(0);
    }
  }
</style>