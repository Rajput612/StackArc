---
import ClientWrapper from '../components/ClientWrapper';
import ThemeToggle from '../components/ThemeToggle.astro';
import Navigation from '../components/Navigation.astro';
const { title = 'StackArc - Learn Python Programming' } = Astro.props;
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="generator" content={Astro.generator} />
    <script is:inline>
      // Initialize Pyodide loading
      window.pyodideReadyPromise = (async function() {
        if (!window.loadPyodide) {
          const script = document.createElement('script');
          script.src = 'https://cdn.jsdelivr.net/pyodide/v0.22.1/full/pyodide.js';
          script.async = true;
          document.head.appendChild(script);
          
          await new Promise((resolve) => {
            script.onload = resolve;
          });
        }

        const pyodide = await loadPyodide();
        
        // Set up stdout/stderr capture
        await pyodide.runPython(`
          import sys
          import io

          class CaptureOutput:
              def __init__(self):
                  self.output = []
              def write(self, text):
                  self.output.append(text.strip())
              def flush(self):
                  pass

          capture = CaptureOutput()
          sys.stdout = capture
          sys.stderr = capture
        `);

        return pyodide;
      })();
    </script>
    <script>
      // Initialize theme
      const theme = (() => {
        if (typeof localStorage !== 'undefined' && localStorage.getItem('theme')) {
          return localStorage.getItem('theme');
        }
        if (window.matchMedia('(prefers-color-scheme: dark)').matches) {
          return 'dark';
        }
        return 'light';
      })();
      
      if (theme === 'dark') {
        document.documentElement.classList.add('dark');
      }
    </script>
  </head>
  <body class="min-h-screen bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 transition-colors duration-300">
    <Navigation />
    <main class="pt-[4rem]"> 
      <slot />
    </main>
    <div class="fixed bottom-4 right-4 z-50">
      <ThemeToggle />
    </div>
    <script>
      // Preload Pyodide
      import { loadPyodide } from '../utils/pyodide';
      
      // Load Pyodide when the page loads
      document.addEventListener('DOMContentLoaded', () => {
        loadPyodide().catch(error => {
          console.error('Failed to load Pyodide:', error);
        });
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    color-scheme: light dark;
  }
  
  html {
    font-family: system-ui, sans-serif;
    scroll-behavior: smooth;
  }

  body {
    margin: 0;
    padding: 0;
  }

  @media (prefers-color-scheme: dark) {
    html {
      color-scheme: dark;
    }
  }
</style>